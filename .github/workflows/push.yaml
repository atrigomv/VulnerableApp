name: push workflow
run-name: push workflow
on: [push]
jobs:
  codeql:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: CodeQL
        run: |
          wget https://github.com/github/codeql-action/releases/download/codeql-bundle-v2.16.4/codeql-bundle-linux64.tar.gz
          tar -xf codeql-bundle-linux64.tar.gz
          cd codeql
          ls -la
          ./codeql --version
        #  ./codeql database create . --language=java
  horusec:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: Run Horusec
        run: |
          curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/master/deployments/scripts/install.sh | bash -s latest
          horusec version
          horusec start -D -p ./ -o json -O horusec_report.json
          ls -la
      - name: Persist Artifact
        uses: actions/upload-artifact@v3
        with:
          name: horusec_report
          path: horusec_report.json
      - name: Check Security Gates
        run: |
          curl -X GET -H "x-api-key: ${{secrets.CARONTE_API_KEY}}" "${{secrets.CARONTE_ENDPOINT}}/v0/secgate?findingName=&findingID=HS-JAVA-134&service=horusec"
          sg_status=$(curl -X GET -H "x-api-key: ${{secrets.CARONTE_API_KEY}}" "${{secrets.CARONTE_ENDPOINT}}/v0/secgate?findingName=&findingID=HS-JAVA-134&service=horusec" | cut -d "," -f 3 | cut -d ":" -f 2)
          sg_type=$(curl -X GET -H "x-api-key: ${{secrets.CARONTE_API_KEY}}" "${{secrets.CARONTE_ENDPOINT}}/v0/secgate?findingName=&findingID=HS-JAVA-134&service=horusec" | cut -d "," -f 4 | cut -d ":" -f 2)
          echo "\n"
          echo "$sg_status"
          echo "\n"
          echo "$sg_type"
          if [ "$sg_status" = "True" ] && [ "$sg_type" = "hard" ]; then
            echo "\n"
            echo "HARD SECURITY GATE --> Failing the workflow..."
            exit 1
          fi

          if [ "$sg_status" = "True" ] && [ "$sg_type" = "soft" ]; then
            echo "\n"
            echo "SOFT SECURITY GATE --> Be careful my friend"
          fi

          if [ "$sg_status" = "False" ]; then
            echo "\n"
            echo "Security gate passed successfully!"
          fi
      #LOLO
