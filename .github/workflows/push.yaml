name: push workflow
run-name: push workflow
on: [push]
jobs:
  codeql:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: CodeQL
        run: |
          wget https://github.com/github/codeql-action/releases/download/codeql-bundle-v2.16.4/codeql-bundle-linux64.tar.gz
          tar -xf codeql-bundle-linux64.tar.gz
          cd codeql
          ls -la
          ./codeql --version
        #  ./codeql database create . --language=java
  horusec:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: Run Horusec
        run: |
          curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/master/deployments/scripts/install.sh | bash -s latest
          horusec version
          horusec start -D -p ./ -o json -O horusec_report.json
          ls -la
      - name: Persist Artifact
        uses: actions/upload-artifact@v3
        with:
          name: horusec_report
          path: horusec_report.json
      - name: Check Security Gates
        run: |
          curl -X GET -H "x-api-key: ${{secrets.CARONTE_API_KEY}}" "${{secrets.CARONTE_ENDPOINT}}/v0/secgate?findingName=&findingID=HS-JAVA-134&service=horusec"
          sg_status=$(curl -X GET -H "x-api-key: ${{secrets.CARONTE_API_KEY}}" "${{secrets.CARONTE_ENDPOINT}}/v0/secgate?findingName=&findingID=HS-JAVA-134&service=horusec" | cut -d "," -f 3 | cut -d ":" -f 2)
          sg_type=$(curl -X GET -H "x-api-key: ${{secrets.CARONTE_API_KEY}}" "${{secrets.CARONTE_ENDPOINT}}/v0/secgate?findingName=&findingID=HS-JAVA-134&service=horusec" | cut -d "," -f 4 | cut -d ":" -f 2)
          sg_status=$(echo "$sg_status" | tr -d '"')
          sg_type=$(echo "$sg_type" | tr -d '"')
          
          json=$(curl -X GET -H "x-api-key: ${{secrets.CARONTE_API_KEY}}" "${{secrets.CARONTE_ENDPOINT}}/v0/secgate?findingName=&findingID=HS-JAVA-134&service=horusec")

          # Extraer los valores de "status" y "type" usando jq
          status=$(echo "$json" | jq -r '.status')
          type=$(echo "$json" | jq -r '.type')

          echo $status
          echo "$type"

          # Verificar las condiciones
          if [[ "$status" == "True" && "$type" == "hard" ]]; then
              echo "Error: El valor de 'status' es 'True' y el de 'type' es 'hard'."
              exit 1
          fi
